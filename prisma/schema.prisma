// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}
model User {
  user_id         String   @id @default(uuid())
  username        String   @unique
  email           String   @unique
  password        String
  first_name      String
  middle_initial  String?
  last_name       String
  suffix          String?
  contact_number  String
  year_level      Int
  status          String
  created_at      DateTime @default(now())

  user_role_id    Int   
  userRole        UserRole @relation(fields: [user_role_id], references: [role_id])

  qr_code_id      String  @unique
  qrCode          QrCode @relation(fields: [qr_code_id], references: [qr_id])
}

  model UserRole {
  role_id    Int      @id @default(autoincrement())
  role       String   @unique
  created_at DateTime @default(now())

  users      User[]
}

model QrCode {
  qr_id           String   @id @default(uuid())
  qr_code         String  
  created_at      DateTime @default(now())

  user            User?
}

// model Votes {
//   vote_id         String   @id @default(uuid())
//   user_id         String
//   candidate_id    String
//   created_at      DateTime @default(now())

//   user            User @relation(fields: [user_id], references: [user_id])
//   candidate       Candidate @relation(fields: [candidate_id], references: [candidate_id])
// }


datasource db {
  provider = "postgresql"
  url      = env("DATABASE_POSTGRES_URL")
}
